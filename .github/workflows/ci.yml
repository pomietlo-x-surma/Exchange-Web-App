name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Checkout kodu wraz z submodułami (jeśli są)
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # 2. Instalacja CMake w wymaganej wersji
      - name: Install CMake
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' --version=3.29.2

      # 2a. Weryfikacja wersji CMake
      - name: Verify CMake version
        run: cmake --version

      # 3. Sprawdzenie obecności pliku vcpkg.json
      - name: List files in repository root
        run: dir "${{ github.workspace }}"

      # 4. Cache vcpkg repo i zainstalowanych pakietów
      - name: Cache vcpkg
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/vcpkg
            ${{ github.workspace }}/vcpkg/buildtrees
            ${{ github.workspace }}/vcpkg/packages
            ${{ github.workspace }}/vcpkg/downloads
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      # 5. Instalacja vcpkg (jeśli nie jest w cache)
      - name: Install vcpkg
        if: ${{ ! steps.cache-vcpkg.outputs.cache-hit }}
        run: |
          git clone https://github.com/microsoft/vcpkg.git %GITHUB_WORKSPACE%\vcpkg
          .\vcpkg\bootstrap-vcpkg.bat

      # 6. Weryfikacja instalacji vcpkg
      - name: Verify vcpkg installation
        run: |
          vcpkg version
          vcpkg list

      # 7. Dodanie vcpkg do PATH
      - name: Add vcpkg to PATH
        shell: pwsh
        run: |
          echo "${{ github.workspace }}/vcpkg" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # 8. Sprawdzenie PATH
      - name: Check PATH
        shell: pwsh
        run: echo $env:PATH

      # 9. Instalacja zależności za pomocą vcpkg w trybie manifestu
      - name: Install dependencies with vcpkg
        shell: cmd
        run: |
          cd /d "%GITHUB_WORKSPACE%"
          vcpkg install --triplet x64-windows || (
            echo "vcpkg install failed. Displaying log:"
            if exist "build\x64-Debug\vcpkg-manifest-install.log" (
              type "build\x64-Debug\vcpkg-manifest-install.log"
            ) else (
              echo "Log file not found."
            )
            exit /b 1
          )

      # 10. Weryfikacja zainstalowanych pakietów
      - name: List installed packages
        run: vcpkg list

      # 11. Budowanie projektu
      - name: Build project
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 17 2022" -A x64 ^
            -DCMAKE_BUILD_TYPE=Debug ^
            -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake" ^
            ..
          cmake --build . --config Debug

      # 12. Listowanie zawartości katalogu build
      - name: List build directory
        run: dir build

      # 13. Listowanie zawartości katalogu vcpkg
      - name: List vcpkg directory
        run: dir "${{ github.workspace }}/vcpkg"

      # 14. (Opcjonalnie) Uruchomienie testów
      - name: Run Tests
        shell: cmd
        run: |
          cd build
          ctest --output-on-failure --build-config Debug
