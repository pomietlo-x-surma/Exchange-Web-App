name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Przywróć cache przed instalacją vcpkg
      - name: Restore vcpkg cache
        uses: actions/cache@v3
        with:
          path: |
            vcpkg/installed
            vcpkg/downloads
          key: ${{ runner.os }}-vcpkg-boost-sqlite
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Set up vcpkg
        run: |
          echo "Cloning vcpkg repository..."
          git clone https://github.com/microsoft/vcpkg.git
          echo "Bootstrapping vcpkg..."
          .\vcpkg\bootstrap-vcpkg.bat
          echo "Installing packages..."
          .\vcpkg\vcpkg install boost sqlite3
          echo "Vcpkg setup completed."

      # Kroki debugowania: sprawdzenie ścieżek
      - name: Debug vcpkg cache directory
        run: |
          echo "Checking vcpkg/installed directory:"
          dir "vcpkg\installed"
          echo "Checking vcpkg/downloads directory:"
          dir "vcpkg\downloads"
        shell: cmd

      - name: Install Ninja
        run: |
          echo "Installing Ninja..."
          choco install ninja
          echo "Ninja installed."

      - name: Configure CMake
        run: |
          echo "Checking if build directory exists..."
          if not exist build mkdir build
          cd build
          echo "Configuring CMake..."
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ..
          echo "CMake configuration completed."
        shell: cmd

      # Zapisz cache po instalacji vcpkg, ale przed budowaniem
      - name: Save vcpkg cache
        uses: actions/cache@v3
        with:
          path: |
            vcpkg/installed
            vcpkg/downloads
          key: ${{ runner.os }}-vcpkg-boost-sqlite-${{ hashFiles('vcpkg.json') }}

      - name: Build
        run: |
          cd build
          echo "Building project..."
          cmake --build .
          echo "Build completed."
        shell: cmd

      - name: Run Tests
        run: |
          cd build
          echo "Running tests..."
          ctest -C Debug --output-on-failure
          echo "Tests completed."
        shell: cmd
