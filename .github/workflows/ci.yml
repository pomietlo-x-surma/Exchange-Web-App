name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Krok 1: Pobierz kod źródłowy z repozytorium
      - name: Checkout code
        uses: actions/checkout@v3

      # Krok 2: Przywróć cache dla vcpkg
      - name: Restore vcpkg cache
        uses: actions/cache@v3
        with:
          path: |
            vcpkg/installed
            vcpkg/downloads
          key: ${{ runner.os }}-vcpkg-boost-sqlite-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      # Krok 3: Skonfiguruj i zainstaluj vcpkg
      - name: Set up vcpkg
        run: |
          echo "Cloning vcpkg repository..."
          git clone https://github.com/microsoft/vcpkg.git
          echo "Bootstrapping vcpkg..."
          .\vcpkg\bootstrap-vcpkg.bat
          echo "Installing packages from vcpkg.json..."
          .\vcpkg\vcpkg install

      # Krok 4: Zapisz cache po zainstalowaniu pakietów
      - name: Save vcpkg cache
        uses: actions/cache@v3
        with:
          path: |
            vcpkg/installed
            vcpkg/downloads
          key: ${{ runner.os }}-vcpkg-boost-sqlite-${{ hashFiles('vcpkg.json') }}

      # Krok 5: Instalacja Ninja (jeśli potrzebujesz tego narzędzia)
      - name: Install Ninja
        run: |
          echo "Installing Ninja..."
          choco install ninja
          echo "Ninja installed."

      # Krok 6: Skonfiguruj CMake z użyciem Ninja
      - name: Configure CMake
        run: |
          echo "Checking if build directory exists..."
          if not exist build mkdir build
          cd build
          echo "Configuring CMake..."
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ..
          echo "CMake configuration completed."
        shell: cmd

      # Krok 7: Zbuduj projekt
      - name: Build
        run: |
          cd build
          echo "Building project..."
          cmake --build .
          echo "Build completed."
        shell: cmd

      # Krok 8: Uruchom testy
      - name: Run Tests
        run: |
          cd build
          echo "Running tests..."
          ctest -C Debug --output-on-failure
          echo "Tests completed."
        shell: cmd
